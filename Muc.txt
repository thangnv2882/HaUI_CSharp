Scaffold-DbContext "" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models

Style="{DynamicResource border1}"

Type t = list.SelectedItem.GetType();
PropertyInfo[] p = t.GetProperties();
abc.Text = p[0].GetValue(list.SelectedValue).ToString();

public string thanhTien()
        {
            CultureInfo cultureInfo = CultureInfo.GetCultureInfo("vi-VN");
            int a = (int)(DonGiaBan * SoLuongCon);
            string b = a.ToString("#,###", cultureInfo.NumberFormat);
            return b;
        }

		var query = from hang in db.Hangs
                        join dmHang in db.DanhMucHangs
                        on hang.MaDm equals dmHang.MaDm
                        select new {
                            dmHang.MaDm,
                            dmHang.TenDm,
                            TongTien = hang.SoLuongCon * hang.DonGiaBan
                        };

            var results = query.GroupBy(a => new { a.MaDm, a.TenDm })
                .Select(s => new
                {
                    s.Key.MaDm,
                    s.Key.TenDm,
                    TongTien = s.Sum(sum => sum.TongTien)
                });

		// Thông kê mỗi nhóm hàng bán được bn sản phẩm
            var query = from sp in db.SanPhams
                        join nh in db.NhomHangs
                        on sp.MaNhomHang equals nh.MaNhomHang
                        orderby sp.SoLuongBan descending
                        select new
                        {
                            sp.MaNhomHang,
                            sp.SoLuongBan
                        };

            var result = query.GroupBy(g => new { g.MaNhomHang } )
                .Select(s => new
                {
                    s.Key.MaNhomHang,
                    Sum = s.Sum(sum => sum.SoLuongBan)
                });


<Window.Resources>
	<Style TargetType="TextBox">
		<Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="Foreground" Value="Green" />
      </Style>
      <Style x:Key="border1" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="200" Background="Aqua">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
       </Style>
</Window.Resources>

<DataGridTextColumn.ElementStyle>
	<Style TargetType="TextBlock">
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="Foreground" Value="red" />
		<Setter Property="FontStyle" Value="Italic" />
	</Style>
</DataGridTextColumn.ElementStyle>

<DataGrid.Resources>
	<Style TargetType="DataGridColumnHeader">
		<Setter Property="FontWeight" Value="bold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
      </Style>
</DataGrid.Resources>


<ControlTemplate.Triggers>
	<Trigger Property="IsEnabled" Value="false">
		<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
		<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
		<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
	</Trigger>
</ControlTemplate.Triggers>

	public Boolean checkDL()
        {
            string t = "";
            if(txtMa.Text.CompareTo("") == 0 
                || txtTen.Text.CompareTo("") == 0
                || txtDG.Text.CompareTo("") == 0
                || txtSL.Text.CompareTo("") == 0
                || CBHang.Text.CompareTo("") == 0)
            {
                t += "Vui lòng nhập đầy đủ dữ liệu";
            }
            else
            {
                int a;
                if(!int.TryParse(txtMa.Text, out a))
                {
                    t += "Mã sản phẩm phải là số nguyên";
                }
                if (!int.TryParse(txtSL.Text, out a))
                {
                    t += "Số lượng bán phải là số nguyên";
                }
                else
                {
                    if(int.Parse(txtSL.Text) < 1)
                    {
                        t += "Số lượng bán phải >= 1";
                    }
                }
                float b;
                if (!float.TryParse(txtDG.Text, out b))
                {
                    t += "Đơn giá phải là số thực";
                }
            }
            if(t.CompareTo("") != 0)
            {
                MessageBox.Show(t, "Thông báo");
                return false;
            }
            return true;
        }